[project]
name = "bibliograph"
version = "0.5.0"
description = "App for organizing book collections"
authors = [
    { name = "Artyom Kropp", email = "artyomkropp@gmail.com" }
]
dependencies = [
    "fastapi~=0.97.0",
    "aiohttp~=3.8.4",
    "alembic~=1.11.1",
    "asyncpg~=0.27.0",
    "SQLAlchemy~=2.0.16",
    "uvicorn~=0.22.0",
    "python-dotenv~=1.0.0",
    "psycopg2-binary~=2.9.6",
    "pydantic[email]~=1.10.9",
    "greenlet~=2.0.2",
    "python-jose~=3.3.0",
    "passlib~=1.7.4",
    "python-multipart~=0.0.6",
]
readme = "README.md"
requires-python = ">= 3.11"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
virtual = true
managed = true
dev-dependencies = [
    "bcrypt~=4.0.1",
    "anyio[trio]~=3.7.0",
    "pytest-asyncio~=0.21.0",
    "pytest~=7.3.2",
    "mypy~=1.3.0",
    "pytest-cov~=4.1.0",
    "httpx~=0.24.1",
    "aiosqlite~=0.19.0",
    "ruff>=0.6.1",
]

[tool.rye.scripts]
lint = "ruff check"
migrate = "alembic upgrade head"
coverage = "pytest --cov=app"
coverage-report = "pytest --cov=app --cov-report xml"
type = "mypy app"
serve = "uvicorn app.main:app --reload --host 0.0.0.0 --port 5000"
check = { chain = ["lint", "type" ] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["app/"]

[tool.pytest.ini_options]
norecursedirs = "__pycache__"
addopts = "--strict-markers"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
disallow_incomplete_defs = true
follow_imports = "skip"

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic/",
    "tests/"
]

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
unfixable = []
select = [
    "ALL"
]
ignore = ["D"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
